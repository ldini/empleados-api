service: empleado-api
frameworkVersion: '3'

custom:
  tableName: 'empleados-table-${sls:stage}'

provider:
  name: aws
  runtime: nodejs18.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ EmpleadosTable, Arn ]
  environment:
    EMPLEADOS_TABLE: ${self:custom.tableName}

functions:
  addEmpleado:
    handler: src/add_empleado.addEmpleado
    events:
      - httpApi:
          path: /empleados
          method: POST
  getEmpleados:
    handler: src/get_empleados.getEmpleados
    events:
      - httpApi:
          path: /empleados
          method: GET
  getEmpleadoId:
    handler: src/get_empleado_id.getEmpleadoId
    events:
      - httpApi:
          path: /empleados/{id}
          method: GET
  deleteEmpleado:
    handler: src/delete_empleado.deleteEmpleado
    events:
      - httpApi:
          path: /empleados/{id}
          method: DElETE

resources:
  Resources:
    EmpleadosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
